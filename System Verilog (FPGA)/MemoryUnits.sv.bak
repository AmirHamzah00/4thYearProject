module NeuronRAM (input logic clk, reset, reset_val,
					   input logic [31:0] init_value,
					   input logic [31:0] data_in,
					  output logic [31:0] data_out);

logic read_en, write_en;				
logic [2:0] counter;
logic [31:0] data;

always_ff @(posedge clk)
begin
	if (reset) begin
		counter <= 3'b000;
	end
	else begin
		counter <= counter + 3'b001;
	end
end

assign read_en = (counter[2] == 1) ? 1'b1:1'b0;
assign write_en = (counter[2] == 0) ? 1'b1:1'b0;

assign data = (reset_val) ? init_value : data_in;
	
ram r0(
	    .address(1'b0),
	    .clock(clk),
	    .data(data),
	    .rden(read_en),
	    .wren(write_en),
	    .q(data_out)
		);
		
endmodule 